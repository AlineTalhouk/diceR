library(CIExp)
library(devtools)
devtools::create("FluidigmValidation")
library(ClassImbalance)
setwd("~/Documents/ClusterDuck")
library(devtools)
devtools::create("ClusterDuck")
library(ClusterDuck)
library(biostatUtil)
??knnImpute
library(ClusterDuck)
data("hgsc")
dat <- hgsc[,-1]
rownames(dat) <- hgsc[,1]
tdat <- t(dat)
mdat <- melt(tdat) %>%
set_colnames(c("patientID","Gene","Expr"))
View(tdat)
sum(!complete.cases(tdat))
E<-ClusterDuck::crEnsemble(X=tdat,M=NULL,k=4,reps=10)
is.matrix(tdat)
library(ClusterDuck)
E<-ClusterDuck::crEnsemble(X=tdat,M=NULL,k=4,reps=10)
E_compressed<-E[,,1]
View(E_compressed)
if(!is.na(dim(E)[3])){
for(i in 2:dim(E)[3]){
E_compressed<-cbind(E_compressed,E[,,i])
}
}
View(E_compressed)
F<-LinkCluE::relabelCl(E_compressed)
max(F$newE)
View(F$newE)
oneToTen<-E_compressed[,1:10]
rm(dat)
rm(E_compressed)
rm(hgsc)
rm(mdat)
rm(oneToTen)
rm(E)
rm(F)
rm(i)
X<-tdat
help("classRelabel")
assertthat::assert_that(is.matrix(X))
E <- NULL
df_conClust <- data.frame(t(X))
colnames(df_conClust) <- rownames(X)
rownames(df_conClust) <- colnames(X)
E <-
ConClust::ConClust(
df_conClust,
k = k,
reps = reps,
method = c(
"nmfDiv",
"nmfEucl",
"hcAEucl",
"hcDianaEucl",
"kmEucl",
"kmSpear",
"pamEucl",
"pamSpear",
"apEucl",
"scRbf",
"gmmBIC",
"biclust"
)
)
rm(df_conClust)
rm(E)
library(ClusterDuck)
reps<-10
assertthat::assert_that(is.matrix(X))
E <- NULL
df_conClust <- data.frame(t(X))
colnames(df_conClust) <- rownames(X)
rownames(df_conClust) <- colnames(X)
E <-
ConClust::ConClust(
df_conClust,
k = k,
reps = reps,
method = c(
"nmfDiv",
"nmfEucl",
"hcAEucl",
"hcDianaEucl",
"kmEucl",
"kmSpear",
"pamEucl",
"pamSpear",
"apEucl",
"scRbf",
"gmmBIC",
"biclust"
)
)
k<-4
E <-
ConClust::ConClust(
df_conClust,
k = k,
reps = reps,
method = c(
"nmfDiv",
"nmfEucl",
"hcAEucl",
"hcDianaEucl",
"kmEucl",
"kmSpear",
"pamEucl",
"pamSpear",
"apEucl",
"scRbf",
"gmmBIC",
"biclust"
)
)
if (is.na(dim(E)[3])) {
E_imputed <- array(dim = c(dim(E), 1))
} else{
E_imputed <- array(dim = dim(E))
}
for (i in 1:dim(E_imputed)[3]) {
E_imputed[, , i] <- apply(E[, , i], 2, knnImpute, tdat = X)
}
sum(!complete.cases(E))
sum(!complete.cases(E_imputed))
E_cs <- consensusSummaries(E_imputed, k = k)
save(E,file="ImputedNotRelabelled.rda")
dim(E_cs[[1]]$consensusClass)
E_cs[[1]]$consensusClass
is.factor(E_cs[[1]]$consensusClass)
classRelabel(E_cs[[1]]$consensusClass,E_cs[[2]]$consensusClass)
table(E_cs[[1]]$consensusClass, classRelabel(E_cs[[1]]$consensusClass,E_cs[[2]]$consensusClass))
length(E_cs)
for(i in 2:length(E_cs)){
E_cs[[i]]$consensusClass<-classRelabel(E_cs[[1]]$consensusClass,E_cs[[i]]$consensusClass)
}
for (i in 1:length(E_cs)) {
E_imputed[, , i] <-
apply(E_imputed[, , i], 2, classRelabel, cl.ref = E_cs[[i]]$consensusClass)
}
E_imputed_relabelled <- E_imputed
E_imputed_relabelled_voted <- array(dim = dim(E_imputed_relabelled))
#If there are still NAs after imputing with KNN, then do majority vote
if (!(sum(!complete.cases(E_imputed_relabelled)) == 0)) {
E_imputed_relabelled_voted <- majVote(E_imputed_relabelled)
} else{
E_imputed_relabelled_voted <-
apply(E_imputed_relabelled_voted, c(1, 2, 3), as.numeric)
}
View(E_imputed_relabelled_voted)
E_cs <- consensusSummaries(E_imputed, k = k)
load("~/Documents/ClusterDuck/ImputedNotRelabelled.rda")
sum(!complete.cases(E))
sum(!complete.cases(E))/(sum(!complete.cases(E))+sum(complete.cases(E)))
library(ClusterDuck)
data("hgsc")
dat <- hgsc[,-1]
rownames(dat) <- hgsc[,1]
tdat <- t(dat)
mdat <- melt(tdat) %>%
set_colnames(c("patientID","Gene","Expr"))
View(mdat)
X<-tdat
reps<-10
k<-4
E <- NULL
df_conClust <- data.frame(t(X))
colnames(df_conClust) <- rownames(X)
rownames(df_conClust) <- colnames(X)
E <-
ConClust::ConClust(
df_conClust,
k = k,
reps = reps,
method = c(
"nmfDiv",
"nmfEucl",
"hcAEucl",
"hcDianaEucl",
"kmEucl",
"kmSpear",
"pamEucl",
"pamSpear",
"apEucl",
"scRbf",
"gmmBIC",
"biclust"
)
)
if (is.na(dim(E)[3])) {
E_imputed <- array(dim = c(dim(E), 1))
} else{
E_imputed <- array(dim = dim(E))
}
for (i in 1:dim(E_imputed)[3]) {
E_imputed[, , i] <- apply(E[, , i], 2, knnImpute, tdat = X)
}
sum(!complete.cases(E_imputed))
save(E_imputed,file="ImputedNotRelabelled.rda")
E_cs <- consensusSummaries(E_imputed, k = k)
tabel(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[2]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[2]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[3]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[4]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[5]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[6]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[7]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[8]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[9]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[10]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[11]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[12]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[1]]$consensusClass,E_cs[[3]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[2]]$consensusClass,E_cs[[3]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[2]]$consensusClass,E_cs[[4]]$consensusClass))
table(E_cs[[1]]$consensusClass,classRelabel(E_cs[[2]]$consensusClass,E_cs[[8]]$consensusClass))
