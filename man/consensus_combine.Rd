% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_combine.R, R/consensus_compare.R,
%   R/consensus_weigh.R
\name{consensus_combine}
\alias{consensus_combine}
\alias{consensus_compare}
\alias{consensus_weigh}
\title{Combine, compare, and weigh algorithms}
\usage{
consensus_combine(..., k, element = c("matrix", "class"), alg.names = NULL)

consensus_compare(data, cl.mat, cons.mat, alg.names = NULL)

consensus_weigh(data.index, top = 5)
}
\arguments{
\item{...}{any number of objects outputted from
\code{\link{consensus_summary}}}

\item{k}{desired number of clusters}

\item{element}{either "matrix" or "class" to extract the consensus matrix or
consensus class, respectively.}

\item{alg.names}{optional. Supply a vector of names for the algorithms.}

\item{data}{data matrix with samples as rows, genes as columns}

\item{cl.mat}{matrix of cluster assignments. Each row is an assignment for a
different algorithm. Use \code{element = "class"} in
\code{consensus_combine}.}

\item{cons.mat}{A list of consensus matrices, one for each algorithm. Use
\code{element = "matrix"} in \code{consensus_combine}.}

\item{data.index}{matrix of indices for each algorthim outputted from
\code{consensus_compare}.}

\item{top}{how many top algorithms to include for weighting. Defaults to 5.}
}
\value{
\code{consensus_combine} returns either a list of all consensus
  matrices or a data frame showing all the consensus classes

\code{consensus_compare} returns a data frame of the indices PAC and
  CHI in each column for each algorithm.

\code{consensus_weigh} returns a matrix of weighted algorithms.
}
\description{
\code{consensus_combine} combines results for multiple objects from
\code{consensus_summary(ConClust())} and outputs either the consensus
matrices or consensus classes for all algorithms. \code{consensus_compare}
compares algorithms on validation indices \code{\link{PAC}} and CHI.
\code{consensus_weigh} weighs clustering algorithms based on these two
indices.
}
\details{
\code{consensus_combine} is useful for generating summaries because the
results have been combined into a single object. For example, if
\code{element = "class"}, then the resulting object can be used to create a
consensus matrix across algorithms, which can be visualized as a heatmap.
}
\examples{
# Consensus clustering for multiple algorithms
set.seed(911)
x <- matrix(rnorm(1000), nrow = 10)
CC1 <- ConClust(x, k = 4, reps = 10, method = "apEucl", save = FALSE)
CC2 <- ConClust(x, k = 4, reps = 10, method = "gmmBIC", save = FALSE)

# Get summary for ConClust
CC1.summ <- consensus_summary(CC1, k = 4)
CC2.summ <- consensus_summary(CC2, k = 4)

# Combine and return either matrices or classes
y1 <- consensus_combine(CC1.summ, CC2.summ, k = 4,
element = "matrix")
str(y1)
y2 <- consensus_combine(CC1.summ, CC2.summ, k = 4,
element = "class")
str(y2)

# Compare algorithms on PAC and CHI
z <- consensus_compare(x, cl.mat = y2, cons.mat = y1)

# Weigh algorithms
consensus_weigh(z)
}
\author{
Derek Chiu
}
\seealso{
Other consensus functions: \code{\link{consensus_class}},
  \code{\link{consensus_confmat}},
  \code{\link{consensus_matrix}},
  \code{\link{consensus_summary}}
}

