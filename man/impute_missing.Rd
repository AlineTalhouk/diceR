% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_missing.R
\name{impute_missing}
\alias{impute_missing}
\title{Impute missing values}
\usage{
impute_missing(E, data, nk, seed = 123456)
}
\arguments{
\item{E}{4D array of clusterings from \code{consensus_cluster}. The number of rows is 
equal to the number of cases to be clustered, number of columns is equal to
the clusterings obtained by different resamplings of the data, the third 
dimension are the different algorithms and the fourth dimension are cluster
sizes.}

\item{data}{data matrix with samples as rows and genes/features as columns}

\item{nk}{cluster size to extract data for (single value)}

\item{seed}{random seed for KNN reproducibility}
}
\value{
A list with the following elements
  \item{knn}{E with (some) missing cases imputed using KNN}
  \item{complete}{flattened matrix of clusterings with complete cases imputed
  using KNN and majority voting, and relabelled, for chosen \code{k}}
}
\description{
Impute missing values from bootstrapped subsampling
}
\details{
The default output from \code{consensus_cluster} will undoubtedly contain \code{NA} 
entries because each replicate chooses a random subset (with replacement) of 
all samples. Missing values are first imputed using KNN (K-Nearest 
Neighbours), with the non-missing cases indicating the training set, and
missing cases indicating the test set. Not all missing values are guaranteed
to be imputed by KNN. See \code{\link[class]{knn}} for details. Thus, any
remaining missing values are imputed using majority voting.
}
\note{
We consider 5 nearest neighbours and the minimum vote for definite 
  decision is 3.
}
\examples{
data(hgsc)
data <- t(hgsc[, -1])[1:100, 1:50]
E <- consensus_cluster(data, nk = 3:4, reps = 10, algorithms = c("hc", "km",
"sc"), progress = FALSE)
sum(is.na(E))
E_imputed <- impute_missing(E, data, 4)
sum(is.na(E_imputed))
}
\author{
Aline Talhouk
}
